=begin
#Platform API

#Spree Platform API

The version of the OpenAPI document: v2
Contact: we@sparksolutions.co
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SpreeClient::OptionTypesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OptionTypesApi' do
  before do
    # run before each test
    @api_instance = SpreeClient::OptionTypesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OptionTypesApi' do
    it 'should create an instance of OptionTypesApi' do
      expect(@api_instance).to be_instance_of(SpreeClient::OptionTypesApi)
    end
  end

  # unit tests for create_option_type
  # Create an Option Type
  # Creates an Option Type
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOptionTypeParams] :create_option_type_params 
  # @return [Resource]
  describe 'create_option_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_option_type
  # Delete an Option Type
  # Deletes an Option Type
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_option_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for option_types_list
  # Return a list of Option Types
  # Returns a list of Option Types
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :per_page 
  # @option opts [String] :filter_option_type_id_eq 
  # @option opts [String] :filter_name_cont 
  # @return [ResourcesList]
  describe 'option_types_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for show_option_type
  # Return an Option Type
  # Returns an Option Type
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [Resource]
  describe 'show_option_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_option_type
  # Update an Option Type
  # Updates an Option Type
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateOptionTypeParams] :update_option_type_params 
  # @return [Resource]
  describe 'update_option_type test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
